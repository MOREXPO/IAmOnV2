{% extends 'base.html.twig' %}
{% block body %}

	<div class="container my-5">
		<div class="row">
			<div class="col-12 col-md-4">
				<form action="{{ path('app_index') }}" method="get" class="mb-4">
					<div class="input-group">
						<input type="text" name="filter" class="form-control" placeholder="{{'Buscar'| trans }}..." aria-label="Buscar" {% if filter %} value="{{filter}}" {% endif %}>
						<button class="btn btn-primary" type="submit">{{'Buscar'| trans }}</button>
					</div>
				</form>
			</div>
		</div>

		<div class="row">
			<div class="col-12">
				<h2 class="pb-2 border-bottom text-white d-flex justify-content-between">{{'Mis interruptores'| trans}}
					<a class="link-light" href="#" data-bs-toggle="modal" data-bs-target="#addModal">
						<i class="bi bi-plus-square"></i>
					</a>
				</h2>
			</div>
		</div>
		<div
			class="row row-cols-1 row-cols-md-3 g-4">
			{# Itera sobre los switches creados por el usuario #}
			{% for switch in mis_switches %}
				<div class="col my-4">
					<div class="card h-100 bg-light">
						<div class="card-body {% if switch.state %} bg-success-subtle {% else %} bg-danger-subtle {% endif %}">
							<h5 class="card-title">
								{{switch.name}}
							</h5>
							<p class="card-text">
								<div class="form-check form-switch fs-5">
									{% if not switch.state %}
										<a href="#" data-bs-toggle="modal" data-bs-target="#switchModal{{ switch.id }}">
										{% endif %}
										<input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheck{{ switch.id }}" {% if switch.state %} checked {% endif %}>
										{% if not switch.state %}
										</a>
									{% endif %}
								</div>
							</p>
							<!-- Agrega otros detalles de tu switch según tus datos -->
							<script>
								$(document).ready(function () { // Escucha el evento change de los checkboxes por su ID
$('#flexSwitchCheck {{ switch.id }}').on('change', function () {

$.ajax({
url: '/check-switch/' + {{ switch.id }}, // Reemplaza con la URL de tu controlador
type: 'POST', // Puedes cambiar a GET si es necesario
data: {
isChecked: false // Envía el estado del checkbox al controlador
},
success: function (response) { // Maneja la respuesta del controlador si es necesario
console.log(response);
location.reload();
},
error: function (error) { // Maneja errores si es necesario
console.error(error);
}
});
});
});
							</script>

						</div>
						<div class="modal fade" id="switchModal{{ switch.id }}" tabindex="-1" aria-labelledby="switchModalLabel{{ switch.id }}" aria-hidden="true">
							<div class="modal-dialog">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title" id="switchModalLabel{{ switch.id }}">{{'Configurar interruptor'| trans }}</h5>
										<button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
											<span aria-hidden="true">&times;</span>
										</button>
									</div>
									<div class="modal-body">
										<form id="switchForm{{ switch.id }}">
											<div class="form-group">
												<label for="onTime">{{'Tiempo de Encendido (minutos)'| trans }}:</label>
												<input type="number" class="form-control" id="onTime{{ switch.id }}" name="onTime" min="1" max="120" value="60">
											</div>
										</form>
									</div>
									<div class="modal-footer">
										<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{'Cerrar'| trans }}</button>
										<button type="button" class="btn btn-primary" onclick="encenderSwitch({{ switch.id }})">{{'Encender'| trans }}</button>
									</div>
								</div>
							</div>
						</div>
						<div class="card-footer">
							<div class="d-flex justify-content-between">
								<a href="#" class="fs-4" data-bs-toggle="modal" data-bs-target="#modalUri{{ switch.id }}">
									<i class="bi bi-share-fill"></i>
								</a>
								<div class="fs-4">{{switch.followers|length}}&nbsp<i class="bi bi-person"></i>
								</div>
								<div>
									<!-- Agrega enlaces o botones según tus necesidades -->
									<a href="{{ path('switches_delete', {'id': switch.id}) }}" onclick="return confirm('{{'¿Estás seguro de que deseas eliminar este Switch?'| trans }}')" class="btn btn-danger">
										<i class="bi bi-x-lg"></i>
									</a>
								</div>
							</div>
						</div>
					</div>
				</div>
				<!-- Modal -->
				<div class="modal fade" id="modalUri{{ switch.id }}" tabindex="-1" aria-labelledby="modalUriLabel" aria-hidden="true">
					<div class="modal-dialog">
						<div class="modal-content">
							<div class="modal-header">
								<h1 class="modal-title fs-5" id="modalUriLabel">URIs</h1>
								<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
							</div>
							<div class="modal-body">
								<div class="form-floating mb-3">
									<div class="input-group">
										<span class="input-group-text" id="inputGroup-sizing-sm">{{'URI publico'| trans}}</span>
										<input type="text" class="form-control" id="floatingInputPublic{{ switch.id }}" value="{{ switch.publicUri }}" readonly>
										<button id="copyButtonPublic{{ switch.id }}" class="btn btn-outline-secondary">
											<i class="bi bi-clipboard"></i>
											{{'Copiar'| trans}}
										</button>
									</div>
								</div>
								<div class="form-floating mb-3">
									<div class="input-group">
										<span class="input-group-text" id="inputGroup-sizing-sm">{{'URI privado'| trans}}</span>
										<input type="text" class="form-control" id="floatingInputPrivate{{ switch.id }}" value="{{ switch.privateUri }}" readonly>
										<button id="copyButtonPrivate{{ switch.id }}" class="btn btn-outline-secondary">
											<i class="bi bi-clipboard"></i>
											{{'Copiar'| trans}}
										</button>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<script>
					// Agrega un evento de clic para copiar el valor cuando se haga clic en el botón
document.getElementById("copyButtonPublic{{switch.id}}").addEventListener("click", function () { // Selecciona el input correspondiente y copia su valor
var input = document.getElementById("floatingInputPublic{{switch.id}}");
input.select();
document.execCommand("copy");
});

document.getElementById("copyButtonPrivate{{switch.id}}").addEventListener("click", function () { // Selecciona el input correspondiente y copia su valor
var input = document.getElementById("floatingInputPrivate{{switch.id}}");
input.select();
document.execCommand("copy");
});
				</script>
				{% if loop.index % 3 == 0 or loop.last %}
				</div>
				<div class="row row-cols-1 row-cols-md-3 g-4">
				{% endif %}
			{% endfor %}
			{# endfor #}
		</div>

		<div class="row mt-4">
			<div class="col-12">
				<h2 class="pb-2 border-bottom text-white">{{'Interruptores suscritos'| trans}}
				</h2>
			</div>
		</div>
		<div
			class="row row-cols-1 row-cols-md-3 g-4">
			{# Itera sobre los switches a los que está suscrito el usuario #}
			{% for subscribed_switch in subscribed_switches %}
				<div class="col my-4">
					<div class="card h-100 bg-light">
						<div class="card-body {% if subscribed_switch.state %}bg-success-subtle{% else %}bg-danger-subtle{% endif %}">
							<h5 class="card-title">
								{{subscribed_switch.name}}
							</h5>
							<p class="card-text">{{'Usuario propietario'| trans}}:
								{{subscribed_switch.owner.username}}
							</p>
							{% if subscribed_switch.state %}
								<p id="minutosEncendido" class="card-text"></p>
								<script>
									// Obtiene la fecha y hora almacenada en PHP y conviértela en un objeto DateTime de JavaScript
var clickDateStart = luxon.DateTime.fromISO("{{ subscribed_switch.clickDateStart|date('c') }}"); // Asegúrate de obtener la fecha correcta de tu contexto de Twig

function updateMinutesCounter() {
var currentTime = luxon.DateTime.local();
var elapsedTime = Math.floor(currentTime.diff(clickDateStart, 'seconds').seconds);
var minutes = Math.floor(elapsedTime / 60);
var seconds = elapsedTime % 60;

var minutesText = String(minutes).padStart(2, '0');
var secondsText = String(seconds).padStart(2, '0');

var minutosEncendido = document.getElementById("minutosEncendido");
minutosEncendido.textContent = "{{'Tiempo encendido'| trans}}: " + minutesText + ":" + secondsText;
}

// Llama a la función inicialmente para mostrar el tiempo actual
updateMinutesCounter();

// Actualiza el contador cada segundo
setInterval(updateMinutesCounter, 1000);
								</script>
							{% else %}
								<p id="fechaUltimoEncendido" class="card-text"></p>
								<script>
									// Obtiene la fecha y hora almacenada en PHP y conviértela en un objeto DateTime de JavaScript
var clickDateEnd = luxon.DateTime.fromISO("{{ subscribed_switch.clickDateEnd|date('c') }}"); // Asegúrate de obtener la fecha correcta de tu contexto de Twig

var fechaUltimoEncendido = document.getElementById("fechaUltimoEncendido");
var formattedDate = clickDateEnd.toLocaleString(luxon.DateTime.DATETIME_FULL);
fechaUltimoEncendido.textContent = "{{'Fecha Último Encendido'| trans}}: " + formattedDate;
								</script>
							{% endif %}
							<!-- Agrega otros detalles de tus switches suscritos según tus datos -->
						</div>
						<div
							class="card-footer">
							<!-- Agrega enlaces o botones según tus necesidades -->
							<div class="d-flex justify-content-between">
								<div>
									<!-- Agrega detalles del estado o la fecha de encendido según tus datos -->
								</div>
								<div>
									<form action="{{ path('app_change_follower_switch',{'id':subscribed_switch.id}) }}" method="post" class="">
										<button type="submit" class="btn btn-danger">{{'Dejar de seguir'| trans}}</button>
									</form>
								</div>
							</div>
						</div>
					</div>
				</div>
				{% if loop.index % 3 == 0 or loop.last %}
				</div>
				<div class="row row-cols-1 row-cols-md-3 g-4">
				{% endif %}
			{% endfor %}
			{# endfor #}
		</div>
	</div>
	<!-- Modal -->
	<div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content rounded-4 shadow">
				<div class="modal-header p-5 pb-4 border-bottom-0">
					<h1 class="fw-bold mb-0 fs-2">{{'Crear Nuevo Switch'| trans}}</h1>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>

				<div class="modal-body p-5 pt-0">
					<form action="{{ path('app_create_switch') }}" method="post" class="">
						<div class="form-floating mb-3">
							<input type="text" id="nombre" name="nombre" class="form-control rounded-3" maxlength="100" required>
							<label for="floatingInput">{{'Nombre'| trans}}</label>
						</div>
						<div class="form-floating mb-3">
							<textarea id="descripcion" name="descripcion" class="form-control rounded-3" maxlength="400" rows="4"></textarea>
							<label for="floatingPassword">{{'Descripción (Opcional)'| trans}}</label>
						</div>
						<button class="w-100 mb-2 btn btn-lg rounded-3 btn-primary" type="submit">{{'Crear'| trans}}</button>
					</form>
				</div>
			</div>
		</div>
		<script>
			function encenderSwitch(switchId) {
var onTime = parseInt($('#onTime' + switchId).val());

// Realiza una solicitud AJAX al controlador para encender el switch con el tiempo especificado
$.ajax({
url: '/check-switch/' + switchId,
type: 'POST',
data: {
isChecked: true,
onTime: onTime
},
success: function (response) { // Maneja la respuesta del controlador si es necesario
console.log(response);
location.reload();
},
error: function (error) { // Maneja errores si es necesario
console.error(error);
}
});


// Cierra el modal
$('#switchModal' + switchId).modal('hide');
}
		</script>
	</div>

{% endblock %}
